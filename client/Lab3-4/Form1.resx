<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxMAAAsTAQCanBgAAAPISURBVEhLrVVLbxtVGL1CYoHU
        DUJlw4IFTQINKRDHJIQQu2oTWohopaqRkFggkNgiJFSEhFAlugJWdMk/QBASv5/zsDNJmjbBbQg0Ja0C
        nhk7nvGMZzx+VGr5+O6YornQTLJgcTTn3jn3nPt9945NAOAfcMtXSXRzm3Cc8HlmtfRFfLtCdt6bJXp4
        iFRmJhgYk8+TWx+8Tb51HBJdu3FR4oRLy7sG+Wlri/FkBmucQOa3dkheKBaTG79dLSSzpPrmONl9Pfif
        gNp0kKgzr5LIcpEs/LItFYTiNV6tP3JzbZnxZAbdry+RGxc/OZLY3IbonQooZ0NB57knDinnThxGUwby
        uanD7YHHD+mnxwdjqI39ehtKFz5+sXP5M8aTGTgfvh+yh568nbx+ExIbt8A48ZKmTw7K6plwBU0Z0Dkt
        NCRbrw1q6fVNiG/dAePoUzutj9455fVkAvTRI7I8PgiJP3SIVy0oz0xAfXwA0AzQlAXO1SeOgjz9MiR+
        r0G85kD5ZAD04ad1rycTYEwFrNLoAMzNR2AukYX1YB+Y0yNQeWsSVDT1gs6Zp0ahFHgGfvgR9bE0rI89
        i1UPm15PJqBxfkqunh4DMdgPfKAfVDSwzk+BfiYE+tkwAw3nUA/VN8ZAGOkDfrivp5+dlr2eTIASOqbs
        YpnVV/qhOtYPlMuhY6CEX3g48F1PP9Bb09MrXk8moHB8RBHDAZBOjrqgXDw+4gLfPZT/W089vJ5MgFIu
        K6pcBk1VoIZQZNnlmqr6cqqlXEVOPbyeTEADQEGAde9PFw+4fSB+3+WIvQNsp6UYDQvm4hmIpTkwTQsS
        OQEiqbwvT+ZF+D6SBM0wwW61fAJabcWwm+7itFAEw2pCriBBivfn+cISRDJ50HFzdru9dwAKFCpqNB1o
        OA5oyE3KEf686erpWurh9WQCLKygjhWkuCLucAlM2wauuAJZQfLl/OIViGPVurVPBQ9aFE3zkMoX3MUZ
        ftHtsR+nQQvJ3N8Bnf1aZLt9pXDLRwMa6sddPfIDtYgKU1yh1yJcyC1iK0RshQ/npRWIZ7FFGODboman
        K9Md0WsaSedxV7a7cCGd8+WJnAjfRRJQw2vqdLt7/xY1nJbpdO9i+fQWtcB06O1ogbUPN+kTb5LT6dAz
        qHs9mYDV0oZiWDY47S5+MG3QzAZg2w7EsXr3XK5d/3nv/4NIRpjNiYt1YWn1Pvb4Li9d6eLThS+XVrqi
        tHoPz82MZbl3vZ5MQJwrPhpN5y7MJ7OXF1K5rxBfHhjJ7Dd4bp+mePExrycT8P8DyF/PDdOT75o5lgAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>